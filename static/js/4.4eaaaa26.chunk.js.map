{"version":3,"sources":["pages/AboutPage.tsx"],"names":["useStyles","makeStyles","theme","root","marginTop","heading","fontSize","marginBottom","description","logos","display","alignItems","ren","paddingRight","borderRight","palette","text","primary","renVM","paddingTop","paddingLeft","AboutPage","usePageTitle","styles","maxWidth","className","variant","component","color","external","href","links","WIKI","SECURITY_AUDITS","LEGACY_BRIDGE","underline"],"mappings":"+GAAA,wGAWMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,UAAW,IAEbC,QAAS,CACPC,SAAU,GACVC,aAAc,IAEhBC,YAAa,CACXD,aAAc,IAEhBE,MAAO,CACLL,UAAW,GACXM,QAAS,OACTC,WAAY,UAEdC,IAAK,CACHN,SAAU,GACVI,QAAS,cACTC,WAAY,SACZE,aAAc,GACdC,YAAY,aAAD,OAAeZ,EAAMa,QAAQC,KAAKC,UAE/CC,MAAO,CACLZ,SAAU,GACVI,QAAS,cACTC,WAAY,SACZQ,WAAY,EACZC,YAAa,QA0EFC,UAvE2C,WACxDC,YAAa,SACb,IAAMC,EAASvB,IAEf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWwB,SAAS,KAAKC,UAAWF,EAAOpB,MACzC,kBAAC,IAAD,CAAYuB,QAAQ,KAAKC,UAAU,KAAKF,UAAWF,EAAOlB,SAA1D,sBAGA,kBAAC,IAAD,CAAYqB,QAAQ,QAAQD,UAAWF,EAAOf,aAA9C,gIAE2D,IACzD,kBAAC,IAAD,CAAUoB,MAAM,UAAhB,OAHF,iBAGwD,IACtD,kBAAC,IAAD,CAAUA,MAAM,QAAhB,YAJF,wBAIkE,IAChE,kBAAC,IAAD,CAAUA,MAAM,QAAhB,UALF,KAOA,kBAAC,IAAD,CAAYF,QAAQ,KAAKD,UAAWF,EAAOlB,SAA3C,qBAGA,kBAAC,IAAD,CAAYqB,QAAQ,QAAQD,UAAWF,EAAOf,aAA9C,0IAEmE,IACjE,kBAAC,IAAD,CAAUoB,MAAM,UAAhB,OAHF,0CAIW,kBAAC,IAAD,CAAUA,MAAM,QAAhB,UAJX,oCAKc,kBAAC,IAAD,CAAUA,MAAM,QAAhB,UALd,2CAMwB,kBAAC,IAAD,CAAUA,MAAM,UAAhB,OANxB,kBAOW,IACT,kBAAC,IAAD,CAAMC,UAAQ,EAACC,KAAMC,IAAMC,MAA3B,QARF,KAaA,kBAAC,IAAD,CAAYN,QAAQ,KAAKD,UAAWF,EAAOlB,SAA3C,mBAGA,kBAAC,IAAD,CAAYqB,QAAQ,QAAQD,UAAWF,EAAOf,aAA9C,iGAE+B,IAC7B,kBAAC,IAAD,CAAMqB,UAAQ,EAACC,KAAMC,IAAME,iBAA3B,mBAEQ,IALV,0FASA,kBAAC,IAAD,CAAYP,QAAQ,SAApB,oDACoD,IAClD,kBAAC,IAAD,CACEG,UAAQ,EACRC,KAAMC,IAAMG,cACZN,MAAM,UACNO,UAAU,SAJZ,aAFF,KAYA,yBAAKV,UAAWF,EAAOd,OACrB,0BAAMgB,UAAWF,EAAOX,KACtB,kBAAC,IAAD,CAAiBN,SAAS,aAG5B,0BAAMmB,UAAWF,EAAOL,OACtB,kBAAC,IAAD,CAAeZ,SAAS","file":"static/js/4.4eaaaa26.chunk.js","sourcesContent":["import { Container, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { FunctionComponent } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { RenLogoFullIcon, RenVMLogoIcon } from \"../components/icons/RenIcons\";\nimport { MobileLayout } from \"../components/layout/MobileLayout\";\nimport { Link } from \"../components/links/Links\";\nimport { MarkText } from \"../components/typography/TypographyHelpers\";\nimport { links } from \"../constants/constants\";\nimport { usePageTitle } from \"../providers/TitleProviders\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 54,\n  },\n  heading: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n  description: {\n    marginBottom: 20,\n  },\n  logos: {\n    marginTop: 48,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  ren: {\n    fontSize: 50,\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    paddingRight: 25,\n    borderRight: `2px solid ${theme.palette.text.primary}`,\n  },\n  renVM: {\n    fontSize: 26,\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    paddingTop: 2,\n    paddingLeft: 25,\n  },\n}));\nconst AboutPage: FunctionComponent<RouteComponentProps> = () => {\n  usePageTitle(\"About\");\n  const styles = useStyles();\n\n  return (\n    <MobileLayout>\n      <Container maxWidth=\"sm\" className={styles.root}>\n        <Typography variant=\"h2\" component=\"h1\" className={styles.heading}>\n          What is RenBridge?\n        </Typography>\n        <Typography variant=\"body1\" className={styles.description}>\n          RenBridge enables the simple wrapping of digital assets on different\n          blockchains. For example, RenBridge allows users to take{\" \"}\n          <MarkText color=\"orange\">BTC</MarkText> and put it on{\" \"}\n          <MarkText color=\"blue\">Ethereum</MarkText>, as an ERC-20 called{\" \"}\n          <MarkText color=\"grey\">renBTC</MarkText>.\n        </Typography>\n        <Typography variant=\"h2\" className={styles.heading}>\n          How does it work?\n        </Typography>\n        <Typography variant=\"body1\" className={styles.description}>\n          Using RenVM, a universal translator, it converts digital assets to the\n          format needed by its destination chain. For example, RenVM takes{\" \"}\n          <MarkText color=\"orange\">BTC</MarkText>, holds it, and then converts\n          it to an <MarkText color=\"blue\">ERC-20</MarkText> with a 1:1 ratio to\n          ensure your <MarkText color=\"grey\">renBTC</MarkText> is always backed\n          by the same amount of <MarkText color=\"orange\">BTC</MarkText>. Find\n          out more{\" \"}\n          <Link external href={links.WIKI}>\n            here\n          </Link>\n          .\n        </Typography>\n        <Typography variant=\"h2\" className={styles.heading}>\n          How safe is it?\n        </Typography>\n        <Typography variant=\"body1\" className={styles.description}>\n          RenVM holds on to your assets when they are on other blockchains.\n          RenVM is new technology, and{\" \"}\n          <Link external href={links.SECURITY_AUDITS}>\n            security audits\n          </Link>{\" \"}\n          don't completely eliminate risks. Please don't supply assets you can't\n          afford to lose!\n        </Typography>\n        <Typography variant=\"body1\">\n          If you'd rather use the old version of RenBridge,{\" \"}\n          <Link\n            external\n            href={links.LEGACY_BRIDGE}\n            color=\"primary\"\n            underline=\"hover\"\n          >\n            head here\n          </Link>\n          .\n        </Typography>\n        <div className={styles.logos}>\n          <span className={styles.ren}>\n            <RenLogoFullIcon fontSize=\"inherit\" />\n          </span>\n\n          <span className={styles.renVM}>\n            <RenVMLogoIcon fontSize=\"inherit\" />\n          </span>\n        </div>\n      </Container>\n    </MobileLayout>\n  );\n};\n\nexport default AboutPage;\n"],"sourceRoot":""}